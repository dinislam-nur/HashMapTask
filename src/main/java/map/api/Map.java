package map.api;

/**
 * Интерфейс Map. Содержит в себе набор пар ключ-значение.
 * Все ключи в Map являются уникальными. С каждым ключом
 * ассоциируется значение. Интерфейс предоставляет методы
 * добавления пары ключ-значение, извлечения значения по
 * ключу, удаления пары ключ-значение, обновления значения
 * по ключу, метод, возвращающий размер Map, и метод,
 * проверяющий содержание ключа в мапе.
 */
public interface Map {

    /**
     * Метод put добавляет пару ключ-значение в Map.
     * Если в Map уже имеется значение по ключу,
     * старое значение заменяется новым и возвращается
     * методом.
     * @param key - ключ, который собираемся добавить.
     * @param value - значение, которое ассоциируем с ключом.
     * @return - либо null, если добавляемый ключ не хранится
     * в Map, либо, ассоциируемое с ключом, старое значение,
     * если в Map уже имеется добавляемый ключ.
     */
    Object put(Object key, Object value);

    /**
     * Метод get возвращает значение ассоциируемое с ключом.
     * @param key - ключ, по которому хотим получить значение
     * @return - значение, если ключ хранится в Map, или null,
     * если в Map не имеется такого ключа.
     */
    Object get(Object key);

    /**
     * Метод contains проверяет содержание в Map ключа key.
     * @param key - ключ, который хотим проверить.
     * @return - возвращает true, если в Map хранится ключ
     * key, false, если не хранится.
     */
    boolean contains(Object key);

    /**
     * Метод remove удаляет пару ключ-значение по передаваемому
     * ключу key.
     * @param key - ключ, по которому собираемся удалить пару
     *            ключ-значение.
     * @return - возвращает значение из пары ключ-значение,
     * которое было удалено из Map, или null, если в Map не
     * хранится пары ключ-значение, соответствующему ключу key.
     */
    Object remove(Object key);

    /**
     * Метод size возвращает актульный размер Map.
     * @return - возвращает количество пар ключ-значение,
     * хранящихся в Map.
     */
    int size();

}
